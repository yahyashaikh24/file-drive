tings.USE_REMEMBER_ME:
+            return ['username', 'password', 'remember_me']
+        return ['username', 'password']
+
+    def clean_username(self):
+        username = self.cleaned_data['username']
+
+        user = User.objects.filter(username=username).first()
+        if not user:
+            raise ValidationError(_('You entered an invalid username.'))
+
+        if not user.is_active:
+            raise ValidationError(_('This account is not active.'))
+
+        self.user_cache = user
+
+        return username
+
+
+class SignInViaEmailForm(SignIn):
+    email = forms.EmailField(label=_('Email'))
+
+    @property
+    def field_order(self):
+        if settings.USE_REMEMBER_ME:
+            return ['email', 'password', 'remember_me']
+        return ['email', 'password']
+
+    def clean_email(self):
+        email = self.cleaned_data['email']
+
+        user = User.objects.filter(email__iexact=email).first()
+        if not user:
+            raise ValidationError(_('You entered an invalid email address.'))
+
+        if not user.is_active:
+            raise ValidationError(_('This account is not active.'))
+
+        self.user_cache = user
+
+        return email
+
+
+class SignInViaEmailOrUsernameForm(SignIn):
+    email_or_username = forms.CharField(label=_('Email or Username'))
+
+    @property
+    def field_order(self):
+        if settings.USE_REMEMBER_ME:
+            return ['email_or_usernam