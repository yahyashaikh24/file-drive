
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <title>{{ subject }}</title>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+</head>
+
+<body>
+
+<p>
+    {% trans 'To activate your profile, please follow this link:' %}
+</p>
+
+<p>
+    <a href="{{ uri }}">{{ uri }}</a>
+</p>
+
+</body>
+
+</html>
diff --git a/file_drive-master/accounts/templates/accounts/emails/activate_profile.txt b/file_drive-master/accounts/templates/accounts/emails/activate_profile.txt
new file mode 100644
index 0000000000000000000000000000000000000000..8aa32689dca764fa0c5bcac0e387588e8932b97c
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/activate_profile.txt
@@ -0,0 +1,5 @@
+{% load i18n %}
+
+{% trans 'To activate your profile, please follow this link:' %}
+
+{{ uri }}
diff --git a/file_drive-master/accounts/templates/accounts/emails/change_email.html b/file_drive-master/accounts/templates/accounts/emails/change_email.html
new file mode 100644
index 0000000000000000000000000000000000000000..ebadc1a632f5ae7fb9b28d1a8efc64e44377edde
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/change_email.html
@@ -0,0 +1,24 @@
+{% load i18n %}
+
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <title>{{ subject }}</title>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+</head>
+
+<body>
+
+<p>
+    {% trans 'To change your current email address, please follow the link:' %}
+</p>
+
+<p>
+    <a href="{{ uri }}">{{ uri }}</a>
+</p>
+
+</body>
+
+</html>
diff --git a/file_drive-master/accounts/templates/accounts/emails/change_email.txt b/file_drive-master/accounts/templates/accounts/emails/change_email.txt
new file mode 100644
index 0000000000000000000000000000000000000000..f34aea3b5877feb10fa6de960b3bbefeae4cb218
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/change_email.txt
@@ -0,0 +1,5 @@
+{% load i18n %}
+
+{% trans 'To change your current email address, please follow the link:' %}
+
+{{ uri }}
diff --git a/file_drive-master/accounts/templates/accounts/emails/forgotten_username.html b/file_drive-master/accounts/templates/accounts/emails/forgotten_username.html
new file mode 100644
index 0000000000000000000000000000000000000000..317ffe45fc948ff98fa590303bd4c145cb8b4256
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/forgotten_username.html
@@ -0,0 +1,24 @@
+{% load i18n %}
+
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <title>{{ subject }}</title>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+</head>
+
+<body>
+
+<p>
+    {% trans 'Your username is:' %}
+</p>
+
+<p>
+    {{ username }}
+</p>
+
+</body>
+
+</html>
diff --git a/file_drive-master/accounts/templates/accounts/emails/forgotten_username.txt b/file_drive-master/accounts/templates/accounts/emails/forgotten_username.txt
new file mode 100644
index 0000000000000000000000000000000000000000..7096c98b2ed47e73c0dd9a4fcee3852652d16aed
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/forgotten_username.txt
@@ -0,0 +1,5 @@
+{% load i18n %}
+
+{% trans 'Your username is:' %}
+
+{{ username }}
diff --git a/file_drive-master/accounts/templates/accounts/emails/restore_password_email.html b/file_drive-master/accounts/templates/accounts/emails/restore_password_email.html
new file mode 100644
index 0000000000000000000000000000000000000000..171bb9578d252ad12f506a52a1c13ee9aa152493
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/restore_password_email.html
@@ -0,0 +1,28 @@
+{% load i18n %}
+
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
+        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml">
+<head>
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
+    <title>{{ subject }}</title>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+</head>
+
+<body>
+
+<p>
+    {% trans 'You received this email because you requested a password reset for your user account.' %}
+</p>
+
+<p>
+    {% trans 'Please, go to the following page and choose a new password:' %}
+</p>
+
+<p>
+    <a href="{{ uri }}">{{ uri }}</a>
+</p>
+
+</body>
+
+</html>
diff --git a/file_drive-master/accounts/templates/accounts/emails/restore_password_email.txt b/file_drive-master/accounts/templates/accounts/emails/restore_password_email.txt
new file mode 100644
index 0000000000000000000000000000000000000000..6eedb95897d0998da996adafc1e78638702a842d
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/emails/restore_password_email.txt
@@ -0,0 +1,7 @@
+{% load i18n %}
+
+{% trans "You received this email because you requested a password reset for your user account." %}
+
+{% trans 'Please, go to the following page and choose a new password:' %}
+
+{{ uri }}
diff --git a/file_drive-master/accounts/templates/accounts/log_in.html b/file_drive-master/accounts/templates/accounts/log_in.html
new file mode 100644
index 0000000000000000000000000000000000000000..be8583f697465bd5cd1b1cb64010115fc7ced908
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/log_in.html
@@ -0,0 +1,33 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Log in' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-primary">{% trans 'Log in' %}</button>
+
+    </form>
+
+    <hr>
+
+    <ul>
+        <li>
+            <a href="{% url 'accounts:restore_password' %}">{% trans 'Forgot your password?' %}</a>
+        </li>
+        <li>
+            <a href="{% url 'accounts:remind_username' %}">{% trans 'Forgot your username?' %}</a>
+        </li>
+        <li>
+            <a href="{% url 'accounts:resend_activation_code' %}">{% trans 'Resend an activation code' %}</a>
+        </li>
+    </ul>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/log_out.html b/file_drive-master/accounts/templates/accounts/log_out.html
new file mode 100644
index 0000000000000000000000000000000000000000..66f8828eabce96c6d80662f45f855bce7a4a009f
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/log_out.html
@@ -0,0 +1,17 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Logged out' %}</h4>
+
+    <p>
+        {% trans 'Thanks for spending some quality time with the site today.' %}
+    </p>
+
+    <p>
+        <a href="{% url 'accounts:log_in' %}">{% trans 'Log in again' %}</a>
+    </p>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/profile/change_email.html b/file_drive-master/accounts/templates/accounts/profile/change_email.html
new file mode 100644
index 0000000000000000000000000000000000000000..a399611a6a1c3c81e1a9537a4eb968ba7f0eaba6
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/profile/change_email.html
@@ -0,0 +1,19 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Change email' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-success">{% trans 'Change' %}</button>
+
+    </form>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/profile/change_password.html b/file_drive-master/accounts/templates/accounts/profile/change_password.html
new file mode 100644
index 0000000000000000000000000000000000000000..76839fae0fbe65f9ab797fbbf01ba62bb6adb6e6
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/profile/change_password.html
@@ -0,0 +1,19 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Change password' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-success">{% trans 'Change' %}</button>
+
+    </form>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/profile/change_profile.html b/file_drive-master/accounts/templates/accounts/profile/change_profile.html
new file mode 100644
index 0000000000000000000000000000000000000000..47b00010b532bf4ba37996121cc6bd892b19feba
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/profile/change_profile.html
@@ -0,0 +1,19 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Change profile' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-success">{% trans 'Change' %}</button>
+
+    </form>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/remind_username.html b/file_drive-master/accounts/templates/accounts/remind_username.html
new file mode 100644
index 0000000000000000000000000000000000000000..54bf8c6d4d0e19a3a8ade0b75bef29b5e8ee9ad9
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/remind_username.html
@@ -0,0 +1,27 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Remind a username' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-primary">{% trans 'Next' %}</button>
+
+    </form>
+
+    <hr>
+
+    <ul>
+        <li>
+            <a href="{% url 'accounts:log_in' %}">{% trans 'Log in' %}</a>
+        </li>
+    </ul>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/resend_activation_code.html b/file_drive-master/accounts/templates/accounts/resend_activation_code.html
new file mode 100644
index 0000000000000000000000000000000000000000..2f454cc6ffaef143a705f9897ce30efe4879696f
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/resend_activation_code.html
@@ -0,0 +1,27 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Resend an activation code' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-primary">{% trans 'Next' %}</button>
+
+    </form>
+
+    <hr>
+
+    <ul>
+        <li>
+            <a href="{% url 'accounts:log_in' %}">{% trans 'Log in' %}</a>
+        </li>
+    </ul>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/restore_password.html b/file_drive-master/accounts/templates/accounts/restore_password.html
new file mode 100644
index 0000000000000000000000000000000000000000..55d06284c324ff4a4018031c802dfed73e4a901e
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/restore_password.html
@@ -0,0 +1,27 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Restore password' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-primary">{% trans 'Next' %}</button>
+
+    </form>
+
+    <hr>
+
+    <ul>
+        <li>
+            <a href="{% url 'accounts:log_in' %}">{% trans 'Log in' %}</a>
+        </li>
+    </ul>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/restore_password_confirm.html b/file_drive-master/accounts/templates/accounts/restore_password_confirm.html
new file mode 100644
index 0000000000000000000000000000000000000000..e28dfc2c638a44c5053665961e21e0e59db94a16
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/restore_password_confirm.html
@@ -0,0 +1,33 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Restore password' %}</h4>
+
+    {% if validlink %}
+
+        <p>
+            {% trans 'Please enter your new password twice so we can verify you typed it in correctly.' %}
+        </p>
+
+        <form method="post">
+
+            {% csrf_token %}
+            {% bootstrap_form form %}
+
+            <button class="btn btn-success">{% trans 'Change' %}</button>
+
+        </form>
+
+    {% else %}
+
+        <div class="alert alert-danger">
+            {% trans 'The password reset link was invalid, possibly because it has already been used. Please request a new password reset.' %}
+        </div>
+
+    {% endif %}
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/restore_password_done.html b/file_drive-master/accounts/templates/accounts/restore_password_done.html
new file mode 100644
index 0000000000000000000000000000000000000000..92596b0b182ec59635ae287a9aa028ba94ef1719
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/restore_password_done.html
@@ -0,0 +1,18 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Restore password' %}</h4>
+
+    <div>
+        {% trans "We've emailed you instructions for setting your password, if an account exists with the email you entered." %}
+        {% trans 'You should receive them shortly.' %}
+
+        <br>
+
+        {% trans "If you don't receive an email, please make sure you've entered the address you signed up with, and check your spam folder." %}
+    </div>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/templates/accounts/sign_up.html b/file_drive-master/accounts/templates/accounts/sign_up.html
new file mode 100644
index 0000000000000000000000000000000000000000..35d4a6187a6d2ebf74a9d8722b1ca15179769a19
--- /dev/null
+++ b/file_drive-master/accounts/templates/accounts/sign_up.html
@@ -0,0 +1,19 @@
+{% extends 'layouts/default/page.html' %}
+
+{% load bootstrap4 %}
+{% load i18n %}
+
+{% block content %}
+
+    <h4>{% trans 'Create an account' %}</h4>
+
+    <form method="post">
+
+        {% csrf_token %}
+        {% bootstrap_form form %}
+
+        <button class="btn btn-success">{% trans 'Create' %}</button>
+
+    </form>
+
+{% endblock %}
diff --git a/file_drive-master/accounts/urls.py b/file_drive-master/accounts/urls.py
new file mode 100644
index 0000000000000000000000000000000000000000..da0413035ce7c3df4896b2187e67c65e131ce689
--- /dev/null
+++ b/file_drive-master/accounts/urls.py
@@ -0,0 +1,30 @@
+from django.urls import path
+
+from .views import (
+    LogInView, ResendActivationCodeView, RemindUsernameView, SignUpView, ActivateView, LogOutView,
+    ChangeEmailView, ChangeEmailActivateView, ChangeProfileView, ChangePasswordView,
+    RestorePasswordView, RestorePasswordDoneView, RestorePasswordConfirmView,
+)
+
+app_name = 'accounts'
+
+urlpatterns = [
+    path('log-in/', LogInView.as_view(), name='log_in'),
+    path('log-out/', LogOutView.as_view(), name='log_out'),
+
+    path('resend/activation-code/', ResendActivationCodeView.as_view(), name='resend_activation_code'),
+
+    path('sign-up/', SignUpView.as_view(), name='sign_up'),
+    path('activate/<code>/', ActivateView.as_view(), name='activate'),
+
+    path('restore/password/', RestorePasswordView.as_view(), name='restore_password'),
+    path('restore/password/done/', RestorePasswordDoneView.as_view(), name='restore_password_done'),
+    path('restore/<uidb64>/<token>/', RestorePasswordConfirmView.as_view(), name='restore_password_confirm'),
+
+    path('remind/username/', RemindUsernameView.as_view(), name='remind_username'),
+
+    path('change/profile/', ChangeProfileView.as_view(), name='change_profile'),
+    path('change/password/', ChangePasswordView.as_view(), name='change_password'),
+    path('change/email/', ChangeEmailView.as_view(), name='change_email'),
+    path('change/email/<code>/', ChangeEmailActivateView.as_view(), name='change_email_activation'),
+]
diff --git a/file_drive-master/accounts/utils.py b/file_drive-master/accounts/utils.py
new file mode 100644
index 0000000000000000000000000000000000000000..a8f81794f1091d373258947d544adc136409f5c1
--- /dev/null
+++ b/file_drive-master/accounts/utils.py
@@ -0,0 +1,51 @@
+from django.conf import settings
+from django.core.mail import EmailMultiAlternatives
+from django.template.loader import render_to_string
+from django.urls import reverse
+from django.utils.translation import gettext_lazy as _
+
+
+def send_mail(to, template, context):
+    html_content = render_to_string(f'accounts/emails/{template}.html', context)
+    text_content = render_to_string(f'accounts/emails/{template}.txt', context)
+
+    msg = EmailMultiAlternatives(context['subject'], text_content, settings.DEFAULT_FROM_EMAIL, [to])
+    msg.attach_alternative(html_content, 'text/html')
+    msg.send()
+
+
+def send_activation_email(request, email, code):
+    context = {
+        'subject': _('Profile activation'),
+        'uri': request.build_absolute_uri(reverse('accounts:activate', kwargs={'code': code})),
+    }
+
+    send_mail(email, 'activate_profile', context)
+
+
+def send_activation_change_email(request, email, code):
+    context = {
+        'subject': _('Change email'),
+        'uri': request.build_absolute_uri(reverse('accounts:change_email_activation', kwargs={'code': code})),
+    }
+
+    send_mail(email, 'change_email', context)
+
+
+def send_reset_password_email(request, email, token, uid):
+    context = {
+        'subject': _('Restore password'),
+        'uri': request.build_absolute_uri(
+            reverse('accounts:restore_password_confirm', kwargs={'uidb64': uid, 'token': token})),
+    }
+
+    send_mail(email, 'restore_password_email', context)
+
+
+def send_forgotten_username_email(email, username):
+    context = {
+        'subject': _('Your username'),
+        'username': username,
+    }
+
+    send_mail(email, 'forgotten_username', context)
diff --git a/file_drive-master/accounts/views.py b/file_drive-master/accounts/views.py
new file mode 100644
index 0000000000000000000000000000000000000000..9592fe79ff71bdeea868ffc68adf7201607b0044
--- /dev/null
+++ b/file_drive-master/accounts/views.py
@@ -0,0 +1,328 @@
+from django.contrib import messages
+from django.contrib.auth import login, authenticate, REDIRECT_FIELD_NAME
+from django.contrib.auth.tokens import default_token_generator
+from django.contrib.auth.mixins import LoginRequiredMixin
+from django.contrib.auth.views import (
+    LogoutView as BaseLogoutView, PasswordChangeView as BasePasswordChangeView,
+    PasswordResetDoneView as BasePasswordResetDoneView, PasswordResetConfirmView as BasePasswordResetConfirmView,
+)
+from django.shortcuts import get_object_or_404, redirect
+from django.utils.crypto import get_random_string
+from django.utils.decorators import method_decorator
+from django.utils.http import is_safe_url
+from django.utils.encoding import force_bytes
+from django.utils.http import urlsafe_base64_encode
+from django.utils.translation import gettext_lazy as _
+from django.views.decorators.cache import never_cache
+from django.views.decorators.csrf import csrf_protect
+from django.views.decorators.debug import sensitive_post_parameters
+from django.views.generic import View, FormView
+from django.conf import settings
+
+from .utils import (
+    send_activation_email, send_reset_password_email, send_forgotten_username_email, send_activation_change_email,
+)
+from .forms import (
+    SignInViaUsernameForm, SignInViaEmailForm, SignInViaEmailOrUsernameForm, SignUpForm,
+    RestorePasswordForm, RestorePasswordViaEmailOrUsernameForm, RemindUsernameForm,
+    ResendActivationCodeForm, ResendActivationCodeViaEmailForm, ChangeProfileForm, ChangeEmailForm,
+)
+from .models import Activation
+
+
+class GuestOnlyView(View):
+    def dispatch(self, request, *args, **kwargs):
+        # Redirect to the index page if the user already authenticated
+        if request.user.is_authenticated:
+            return redirect(settings.LOGIN_REDIRECT_URL)
+
+        return super().dispatch(request, *args, **kwargs)
+
+
+class LogInView(GuestOnlyView, FormView):
+    template_name = 'accounts/log_in.html'
+
+    @staticmethod
+    def get_form_class(**kwargs):
+        if settings.DISABLE_USERNAME or settings.LOGIN_VIA_EMAIL:
+            return SignInViaEmailForm
+
+        if settings.LOGIN_VIA_EMAIL_OR_USERNAME:
+            return SignInViaEmailOrUsernameForm
+
+        return SignInViaUsernameForm
+
+    @method_decorator(sensitive_post_parameters('password'))
+    @method_decorator(csrf_protect)
+    @method_decorator(never_cache)
+    def dispatch(self, request, *args, **kwargs):
+        # Sets a test cookie to make sure the user has cookies enabled
+        request.session.set_test_cookie()
+
+        return super().dispatch(request, *args, **kwargs)
+
+    def form_valid(self, form):
+        request = self.request
+
+        # If the test cookie worked, go ahead and delete it since its no longer needed
+        if request.session.test_cookie_worked():
+            request.session.delete_test_cookie()
+
+        # The default Django's "remember me" lifetime is 2 weeks and can be changed by modifying
+        # the SESSION_COOKIE_AGE settings' option.
+        if settings.USE_REMEMBER_ME:
+            if not form.cleaned_data['remember_me']:
+                request.session.set_expiry(0)
+
+        login(request, form.user_cache)
+
+        redirect_to = request.POST.get(REDIRECT_FIELD_NAME, request.GET.get(REDIRECT_FIELD_NAME))
+        url_is_safe = is_safe_url(redirect_to, allowed_hosts=request.get_host(), require_https=request.is_secure())
+
+        if url_is_safe:
+            return redirect(redirect_to)
+
+        return redirect(settings.LOGIN_REDIRECT_URL)
+
+
+class SignUpView(GuestOnlyView, FormView):
+    template_name = 'accounts/sign_up.html'
+    form_class = SignUpForm
+
+    def form_valid(self, form):
+        request = self.request
+        user = form.save(commit=False)
+
+        if settings.DISABLE_USERNAME:
+            # Set a temporary username
+            user.username = get_random_string()
+        else:
+            user.username = form.cleaned_data['username']
+
+        if settings.ENABLE_USER_ACTIVATION:
+            user.is_active = False
+
+        # Create a user record
+        user.save()
+
+        # Change the username to the "user_ID" form
+        if settings.DISABLE_USERNAME:
+            user.username = f'user_{user.id}'
+            user.save()
+
+        if settings.ENABLE_USER_ACTIVATION:
+            code = get_random_string(20)
+
+            act = Activation()
+            act.code = code
+            act.user = user
+            act.save()
+
+            send_activation_email(request, user.email, code)
+
+            messages.success(
+                request, _('You are signed up. To activate the account, follow the link sent to the mail.'))
+        else:
+            raw_password = form.cleaned_data['password1']
+
+            user = authenticate(username=user.username, password=raw_password)
+            login(request, user)
+
+            messages.success(request, _('You are successfully signed up!'))
+
+        return redirect('index')
+
+
+class ActivateView(View):
+    @staticmethod
+    def get(request, code):
+        act = get_object_or_404(Activation, code=code)
+
+        # Activate profile
+        user = act.user
+        user.is_active = True
+        user.save()
+
+        # Remove the activation record
+        act.delete()
+
+        messages.success(request, _('You have successfully activated your account!'))
+
+        return redirect('accounts:log_in')
+
+
+class ResendActivationCodeView(GuestOnlyView, FormView):
+    template_name = 'accounts/resend_activation_code.html'
+
+    @staticmethod
+    def get_form_class(**kwargs):
+        if settings.DISABLE_USERNAME:
+            return ResendActivationCodeViaEmailForm
+
+        return ResendActivationCodeForm
+
+    def form_valid(self, form):
+        user = form.user_cache
+
+        activation = user.activation_set.first()
+        activation.delete()
+
+        code = get_random_string(20)
+
+        act = Activation()
+        act.code = code
+        act.user = user
+        act.save()
+
+        send_activation_email(self.request, user.email, code)
+
+        messages.success(self.request, _('A new activation code has been sent to your email address.'))
+
+        return redirect('accounts:resend_activation_code')
+
+
+class RestorePasswordView(GuestOnlyView, FormView):
+    template_name = 'accounts/restore_password.html'
+
+    @staticmethod
+    def get_form_class(**kwargs):
+        if settings.RESTORE_PASSWORD_VIA_EMAIL_OR_USERNAME:
+            return RestorePasswordViaEmailOrUsernameForm
+
+        return RestorePasswordForm
+
+    def form_valid(self, form):
+        user = form.user_cache
+        token = default_token_generator.make_token(user)
+        uid = urlsafe_base64_encode(force_bytes(user.pk)).decode()
+
+        send_reset_password_email(self.request, user.email, token, uid)
+
+        return redirect('accounts:restore_password_done')
+
+
+class ChangeProfileView(LoginRequiredMixin, FormView):
+    template_name = 'accounts/profile/change_profile.html'
+    form_class = ChangeProfileForm
+
+    def get_initial(self):
+        user = self.request.user
+        initial = super().get_initial()
+        initial['first_name'] = user.first_name
+        initial['last_name'] = user.last_name
+        return initial
+
+    def form_valid(self, form):
+        user = self.request.user
+        user.first_name = form.cleaned_data['first_name']
+        user.last_name = form.cleaned_data['last_name']
+        user.save()
+
+        messages.success(self.request, _('Profile data has been successfully updated.'))
+
+        return redirect('accounts:change_profile')
+
+
+class ChangeEmailView(LoginRequiredMixin, FormView):
+    template_name = 'accounts/profile/change_email.html'
+    form_class = ChangeEmailForm
+
+    def get_form_kwargs(self):
+        kwargs = super().get_form_kwargs()
+        kwargs['user'] = self.request.user
+        return kwargs
+
+    def get_initial(self):
+        initial = super().get_initial()
+        initial['email'] = self.request.user.email
+        return initial
+
+    def form_valid(self, form):
+        user = self.request.user
+        email = form.cleaned_data['email']
+
+        if settings.ENABLE_ACTIVATION_AFTER_EMAIL_CHANGE:
+            code = get_random_string(20)
+
+            act = Activation()
+            act.code = code
+            act.user = user
+            act.email = email
+            act.save()
+
+            send_activation_change_email(self.request, email, code)
+
+            messages.success(self.request, _('To complete the change of email address, click on the link sent to it.'))
+        else:
+            user.email = email
+            user.save()
+
+            messages.success(self.request, _('Email successfully changed.'))
+
+        return redirect('accounts:change_email')
+
+
+class ChangeEmailActivateView(View):
+    @staticmethod
+    def get(request, code):
+        act = get_object_or_404(Activation, code=code)
+
+        # Change the email
+        user = act.user
+        user.email = act.email
+        user.save()
+
+        # Remove the activation record
+        act.delete()
+
+        messages.success(request, _('You have successfully changed your email!'))
+
+        return redirect('accounts:change_email')
+
+
+class RemindUsernameView(GuestOnlyView, FormView):
+    template_name = 'accounts/remind_username.html'
+    form_class = RemindUsernameForm
+
+    def form_valid(self, form):
+        user = form.user_cache
+        send_forgotten_username_email(user.email, user.username)
+
+        messages.success(self.request, _('Your username has been successfully sent to your email.'))
+
+        return redirect('accounts:remind_username')
+
+
+class ChangePasswordView(BasePasswordChangeView):
+    template_name = 'accounts/profile/change_password.html'
+
+    def form_valid(self, form):
+        # Change the password
+        user = form.save()
+
+        # Re-authentication
+        login(self.request, user)
+
+        messages.success(self.request, _('Your password was changed.'))
+
+        return redirect('accounts:change_password')
+
+
+class RestorePasswordConfirmView(BasePasswordResetConfirmView):
+    template_name = 'accounts/restore_password_confirm.html'
+
+    def form_valid(self, form):
+        # Change the password
+        form.save()
+
+        messages.success(self.request, _('Your password has been set. You may go ahead and log in now.'))
+
+        return redirect('accounts:log_in')
+
+
+class RestorePasswordDoneView(BasePasswordResetDoneView):
+    template_name = 'accounts/restore_password_done.html'
+
+
+class LogOutView(LoginRequiredMixin, BaseLogoutView):
+    template_name = 'accounts/log_out.html'
diff --git a/file_drive-master/app/__init__.py b/file_drive-master/app/__init__.py
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/file_drive-master/app/__pycache__/__init__.cpython-37.pyc b/file_drive-master/app/__pycache__/__init__.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..8c6961fb0b965b454f9bfbae51b6d7171a4c97ab
GIT binary patch
literal 134
zcmZ?b<>g`k0_OH5aUl9Jh=2h`Aj1KOi&=m~3PUi1CZpd<h9ZzKg7~HHY8B&>m6(^F
zACsP05|fshlNz5=lv$Rlo10i%l3Em#SWplXAD@|*SrQ+wS5SG2!zMRBr8Fni4rI`0
HAZ7pnMY$gO

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/__init__.cpython-38.pyc b/file_drive-master/app/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..47abcbde70c53ed00d05558730b66f1a800d10de
GIT binary patch
literal 138
zcmWIL<>g`k0_OH5aUl9Jh(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o2DX)hfm%D={xU
zKPEl1Bql90CpA8$D6=e8H#f1kB(*3ev7jI(K0Y%qvm`!Vub}c4hfQvNN@-529mt^1
HK+FIDTTdSi

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/settings.cpython-37.pyc b/file_drive-master/app/__pycache__/settings.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..c5bfbee5b9f6832e39fc84c0d3aa5803d05bbb41
GIT binary patch
literal 287
zcmX|5%}T>S5Z<5EhGOn|^%lW+7ZK5V=%p2#UP7>h?lf%K?1tSn;1l>73SK<;LVNYp
zSMcN{PzUDso9~;sOOgpe<8PnO-<W^;=3pF)TXdIU5JXT#3Ib$D-<e<^wBW$)ncyN)
zQBHI`RHGdCmLwhRkwfMonJw3kPmAg5KA$b-dy2!926~<z1!i0rgYKj?I`A62Wr!9h
z8>6>bYmIo>cxiOzz<a4{SDX%rfDV*t8_@nA`XV+)?ht-2AFj&juF|zBYw63aRInCS
kc5u;D&Vwzhwk;2$S^FB|>jsZ0xaq%hy->`KSwtu74`y&pWB>pF

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/settings.cpython-38.pyc b/file_drive-master/app/__pycache__/settings.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..9be84d21728b7c0963dd38377ee4e6061451c3c6
GIT binary patch
literal 291
zcmYjL%}T>S5Z<5EhGOn|^%lW+7ZJgF=%p2#UP7>h?lf%K?1tSn;1l>73SK<;LVNYp
zSMcN{P;p>>zxlqIRgz2y8h`zG`ojF(H~)=ebBpdW41x%%NI`(?=o=I4ofaIpJri6+
zD$0qDhia7L-jbxFJ#xrAB(vrE;c+ot-Q}~zd{1$h(m>DCqri*{W6+(nMh9Mlw+zwZ
zWMlL;YpoH_8!wH{9C$Bv?TXU@5zv7$Z3Ei>L7&9N$Q{DZ<^5GT-Br3aWi5TVl?v9v
l$__4?%6YJ5)wbn9G;3c%eBIzN1vmY7t`~~gF^lMg{Q`;=O?LnQ

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/urls.cpython-37.pyc b/file_drive-master/app/__pycache__/urls.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..548fdd2d84a5afa5a63dba0052a57c77bf4d43a3
GIT binary patch
literal 908
zcmY*Xy>AmS6u<A>CAlX3NDCbp*djzCCJ;ghN*h$EP*f;`6%ie0CvjxoMYgY{w|1_W
z*kR;PVP#<O%EZ6G#PcOpimmtbd%x%R;b-r~aovLT<@1jZcU{Z+ZH(&`0eA)?e}Tdl
zwwc9kWZMQi%;7F_E9^3l`^e`33M$)UH6Eg{!aj?59n~uwum*3UCXZ2E*)_JtTc}mx
zkhS?bTDL9Y<A~U^joId<1Gr9FxPhBjF5s91c<s`z_!f!3Zhf<Gd+A#T-^S9n33$uk
zNq{=Uoo$Psq(eeLJ0Q1k=gN6#p$^`DYjt=2z}>8_t^EXZngIwUQHo|0*>$uxPt;V`
zXqK`96L1DnC5oniyi-X89ElGzOg_CyCgeRO=X&GCG|4992vo7;;BX|T`T3YKBEg6U
z00xvWJjewvgQ{>}TiT~4mC2nYoRmI&@F?q-9Xx|%c`wbgajy_e_6%P}Y+0g@T4_~t
zbj_4elBRi)DcLXMYgmPrjjD+YsR-|vt(8%EO>a0)3r;dM5_zs(cW<M$Re2@oN8!M@
zbYn%11$>(oV;U45Fv16gc5WP8G`|?22u#rK%4>4>l0r>;JjVob)J%AtCp7Dw!C<8b
zO;YnEQTs;U3!nMJ|IuTZtP~BPwI`_}+B1#mS|Ud#LN~yKw^c-BQv3S{d#5jT^y*;$
z@cHQU<Ve>S@Z|XT-FHjun#xA~y?5|<xL-ZTa6;A4^fAJMo{{@JftiY7GM^8tH=1AQ
g@CjU{VC1O{q4Ex>rrosLAWQ8w9oTl;h#T1d0JG5ud;kCd

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/urls.cpython-38.pyc b/file_drive-master/app/__pycache__/urls.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..4307af5d9fbf011fe7042393fc7a62a5a21f8623
GIT binary patch
literal 759
zcmYjO%We}f6t(A-$vm30r9$ElB19rqR0ts+jZmdRQ6Vg>h-er)siW~sWIKh<whJVr
z{sTyC*s|bbyk*4~AhF_lk}9!uug<yW-fPd9QJO{wj{Euh`!5bczb)B5Z6Hq|)GtUB
zQCuK_3C0#Xg(F<zHrOpZ;S*m3Bxtx-v_we42Kz-@L?jY1i7{e64H%v$^YqFA++xw!
zoo|SSw0-RYk61wCE8J)aiyJLnYdfHI)>;?vuEn!}beKEu%Ac&mLO{C^dvx#Gd4NcV
z?!Q63TYuo~sE3W8QNc?9p<-I|a;AEY@fMjrH!WV~#gZ}*1En*~bCA;GlCn>)vl)BG
z*+;YY{5&gX>;%$sU8{p;<-j20bK4B_UYQA2`~3c4Ij9fl9NMdXUX|1SQWmOj>vg+W
zFBy<d-fW%RRO)t?=hd>*YEY*)uo<o6DKD71RGNuF-Pw>v?O~GADqjj#>WQo>{i?T5
zb~e{*$v;T=#mK~);#9iZ75hNxK}GtI$nCAh)#F#z$iS+R$avYm0B4kJ*_jZM@f6q0
zcy^O%Wolw|69WaCHIt<>{?YK+=!I#&93CA%os7;-OtgY$r>Ad!AbDVS+4S%3@ZtEV
z@ozlidTc*<LM6Xo_e2IJ$Z@t<j2lxImnM89D!MG#V+^C}4x|JpxQi2~>q0nyA(Fpd
G65#(fUfNm!

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/__pycache__/wsgi.cpython-37.pyc b/file_drive-master/app/__pycache__/wsgi.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..418e2269d990f12beab4127360c1bc3e2eb56bbd
GIT binary patch
literal 301
zcmYj~&q@O^5XO`2w$|E;2k{*ibss=PRCXzfZVy{8OE4@=8d9=<NYaX4J@^_5z4%JG
zdh!)KIa?4Mm~Up_`+jph9uE;z@V0r}!2IftzY1ZwgtjLj9C55s(M_UpMGAtEK+E7g
z<N*&qx{JJ`qQ`NLqTV+oP!?f-D1~EBRw`Dutyc5WsiyWv$?a7(nX){c&2F+u&hDql
z!(I9^0#j^-bE=j$>U+{yf54YzEt`1W7!h|QLxAmfM7>r9SVQo0u_#yC`MrNnK9Si4
z<5qr-(=(cEIaDe~7fK7pjarM-s<ciR3PIYz<M!DP&Z~y6w79^Kw|$TS8IgVR3mGz0
An*aa+

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/__init__.py b/file_drive-master/app/conf/__init__.py
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/file_drive-master/app/conf/__pycache__/__init__.cpython-37.pyc b/file_drive-master/app/conf/__pycache__/__init__.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..a69b31fc65591fe4a03e7ec603760a9a89eea9c9
GIT binary patch
literal 139
zcmZ?b<>g`k0_OH5aUl9Jh=2h`Aj1KOi&=m~3PUi1CZpd<h9ZzKg7{_PY8B&>m6(^F
zACsP05|fshlNz5=lv$Rlo10i%l3Em#SWpm?oS&B#6Ca<Mmst`YuUAlci^C>2KczG$
M)edCZXCP((0QSov0RR91

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/__pycache__/__init__.cpython-38.pyc b/file_drive-master/app/conf/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5b15ffe9c55dc0af9c105d1318a7e65b74119425
GIT binary patch
literal 143
zcmWIL<>g`k0_OH5aUl9Jh(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o6wn)hfm%D={xU
zKPEl1Bql90CpA8$D6=e8H#f1kB(*3ev7jI(IX^EgCO$qhFS8^*Uaz3?7Kcr4eoARh
MsvXF*&p^xo01VF|6aWAK

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/development/__init__.py b/file_drive-master/app/conf/development/__init__.py
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/file_drive-master/app/conf/development/__pycache__/__init__.cpython-37.pyc b/file_drive-master/app/conf/development/__pycache__/__init__.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..38ea070452686b1d7611bd3e8d147f34c80d2be1
GIT binary patch
literal 151
zcmZ?b<>g`k0_OH5aUl9Jh=2h`Aj1KOi&=m~3PUi1CZpd<h9ZzKg81d&Y8B&>m6(^F
zACsP05|fshlNz5=lv$Rlo10i%l3Em#SWpm?oS&B#lagANnv-9Uo0?Y=6Ca<Mmst`Y
YuUAlci^C>2KczG$)edCxXCP((0MF+p3;+NC

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/development/__pycache__/__init__.cpython-38.pyc b/file_drive-master/app/conf/development/__pycache__/__init__.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..5de12002f12297ec97bcb26230affdb3feb1dd1c
GIT binary patch
literal 155
zcmWIL<>g`k0_OH5aUl9Jh(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o6wk)hfm%D={xU
zKPEl1Bql90CpA8$D6=e8H#f1kB(*3ev7jI(IX^EgCMC5jH7CCyH#M&$CO$qhFS8^*
YUaz3?7Kcr4eoARhsvXGW&p^xo0Or6Z9{>OV

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/development/__pycache__/settings.cpython-37.pyc b/file_drive-master/app/conf/development/__pycache__/settings.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..dc149bf1efdd57fb61b16a72fd850303a7c9b7d3
GIT binary patch
literal 3443
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
ZI64<ku1FQBnin>pw0QGNg{8dE@*la?X*vJ^

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/development/__pycache__/settings.cpython-38.pyc b/file_drive-master/app/conf/development/__pycache__/settings.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..57503837c4793258c42cc35101ccdaf15c4eae50
GIT binary patch
literal 3308
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

literal 0
HcmV?d00001

diff --git a/file_drive-master/app/conf/development/settings.py b/file_drive-master/app/conf/development/settings.py
new file mode 100644
index 0000000000000000000000000000000000000000..6512426cb8f08ca3900aee9b40668d29314c2d26
--- /dev/null
+++ b/file_drive-master/app/conf/development/settings.py
@@ -0,0 +1,149 @@
+import os
+import warnings
+from django.utils.translation import ugettext_lazy as _
+from os.path import dirname
+
+warnings.simplefilter('error', DeprecationWarning)
+
+BASE_DIR = dirname(dirname(dirname(dirname(os.path.abspath(__file__)))))
+CONTENT_DIR = os.path.join(BASE_DIR, 'content')
+
+SECRET_KEY = 'NhfTvayqggTBPswCXXhWaN69HuglgZIkM'
+
+DEBUG = True
+ALLOWED_HOSTS = []
+
+SITE_ID = 1
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'django.contrib.sites',
+    
+    # Vendor apps
+    'bootstrap4',
+    'rest_framework',
+    'django_elasticsearch_dsl',
+    'django_elasticsearch_dsl_drf',
+
+    # Application apps
+    'main',
+    'accounts',
+    'filesystem',
+    'clear_cache',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.locale.LocaleMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'app.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [
+            os.path.join(CONTENT_DIR, 'templates'),
+        ],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'app.wsgi.application'
+
+EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
+EMAIL_FILE_PATH = os.path.join(CONTENT_DIR, 'tmp/emails')
+EMAIL_HOST_USER = 'test@example.com'
+DEFAULT_FROM_EMAIL = 'test@example.com'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+ENABLE_USER_ACTIVATION = True
+DISABLE_USERNAME = False
+LOGIN_VIA_EMAIL = True
+LOGIN_VIA_EMAIL_OR_USERNAME = False
+LOGIN_REDIRECT_URL = 'index'
+LOGIN_URL = 'accounts:log_in'
+USE_REMEMBER_ME = True
+
+RESTORE_PASSWORD_VIA_EMAIL_OR_USERNAME = False
+ENABLE_ACTIVATION_AFTER_EMAIL_CHANGE = True
+
+SIGN_UP_FIELDS = ['username', 'first_name', 'last_name', 'email', 'password1', 'password2']
+if DISABLE_USERNAME:
+    SIGN_UP_FIELDS = ['first_name', 'last_name', 'email', 'password1', 'password2']
+
+MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
+
+USE_I18N = True
+USE_L10N = True
+LANGUAGE_CODE = 'en'
+LANGUAGES = [
+    ('en', _('English')),
+    ('ru', 