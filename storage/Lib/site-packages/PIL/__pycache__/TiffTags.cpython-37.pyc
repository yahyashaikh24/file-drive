TABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+ENABLE_USER_ACTIVATION = True
+DISABLE_USERNAME = False
+LOGIN_VIA_EMAIL = False
+LOGIN_VIA_EMAIL_OR_USERNAME = True
+LOGIN_REDIRECT_URL = 'index'
+LOGIN_URL = 'accounts:log_in'
+USE_REMEMBER_ME = False
+
+RESTORE_PASSWORD_VIA_EMAIL_OR_USERNAME = True
+EMAIL_ACTIVATION_AFTER_CHANGING = True
+
+MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'
+
+USE_I18N = True
+USE_L10N = True
+LANGUAGE_CODE = 'en'
+LANGUAGES = [
+    ('en', _('English')),
+    ('ru', _('Russian')),
+    ('zh-Hans', _('Simplified Chinese')),
+]
+
+TIME_ZONE = 'UTC'
+USE_TZ = True
+
+STATIC_ROOT = os.path.join(CONTENT_DIR, 'static')
+STATIC_URL = '/static/'
+
+MEDIA_ROOT = os.path.join(CONTENT_DIR, 'media')
+MEDIA_URL = '/media/'
+
+STATICFILES_DIRS = [
+    os.path.join(CONTENT_DIR, 'assets'),
+]
+
+LOCALE_PATHS = [
+    os.path.join(CONTENT_DIR, 'locale')
+]
+
+SIGN_UP_FIELDS = ['username', 'first_name', 'last_name', 'email', 'password1', 'password2']
+if DISABLE_USERNAME:
+    SIGN_UP_FIELDS = ['first_name', 'last_name', 'email', 'password1', 'password2']
diff --git a/file_drive-master/app/settings.py b/file_drive-master/app/settings.py
new file mode 100644
index 0000000000000000000000000000000000000000..9face330319e76794f61583efcab9aa2bcb576ba
--- /dev/null
+++ b/file_drive-master/app/settings.py
@@ -0,0 +1,8 @@
+import os
+
+IS_PRODUCTION = os.environ.get('IS_PRODUCTION')
+
+if IS_PRODUCTION:
+    from .conf.production.settings import *
+else:
+    from .conf.development.settings import *
diff --git a/file_drive-master/app/urls.py b/file_drive-master/app/urls.py
new file mode 100644
index 0000000000000000000000000000000000000000..9cb9ffc249e585f25edb9b0c5c5e0ed07765ad82
--- /dev/null
+++ b/file_drive-master/app/urls.py
@@ -0,0 +1,23 @@
+from django.contrib import admin
+from django.conf import settings
+from django.urls import path, include
+from django.conf.urls.static import static
+from django.contrib.auth.models import User
+from main.views import IndexPageView, ChangeLanguageView
+from filesystem.views import showfiles
+from filesystem.forms import FileFieldForm
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+
+    path('', showfiles, name='index'),
+    # path('',FileFieldForm,name='form'),
+    path('i18n/', include('django.conf.urls.i18n')),
+    path('language/', ChangeLanguageView.as_view(), name='change_language'),
+
+    path('accounts/', include('accounts.urls')),
+    path('filesystem/', include('filesystem.urls')),
+]
+
+if settings.DEBUG:
+    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
diff --git a/file_drive-master/app/wsgi.py b/file_drive-master/app/wsgi.py
new file mode 100644
index 0000000000000000000000000000000000000000..d468f8da7d105b1b65d4d802f55bb0e560973252
--- /dev/null
+++ b/file_drive-master/app/wsgi.py
@@ -0,0 +1,7 @@
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "app.settings")
+
+application = get_wsgi_application()
diff --git a/file_drive-master/content/assets/basicContext-master/.gitattributes b/file_drive-master/content/assets/basicContext-master/.gitattributes
new file mode 100644
index 0000000000000000000000000000000000000000..967a087acbe1af38c1d45c66bd12a8045df30cd0
--- /dev/null
+++ b/file_drive-master/content/assets/basicContext-master/.gitattributes
@@ -0,0 +1 @@
+dist/* binary
\ No newline at end of file
diff --git a/file_drive-master/content/assets/basicContext-master/.gitignore b/file_drive-master/content/assets/basicContext-master/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..464c2790db4b2a29ac1ef25457d785d36a0ac4d7
--- /dev/null
+++ b/file_drive-master/content/assets/basicContext-master/.gitignore
@@ -0,0 +1,4 @@
+etc/
+
+node_modules/
+bower_components/
\ No newline at end of file
diff --git a/file_drive-master/content/assets/basicContext-master/LICENSE b/file_drive-master/content/assets/basicContext-master/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..681c8f507b00e79b7081d4b89c3a7714043dee92
--- /dev/null
+++ b/file_drive-master/content/assets/basicContext-master/LICENSE
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2018 Tobias Reich
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff --git a/file_drive-master/content/assets/basicContext-master/bower.json b/file_drive-master/content/assets/basicContext-master/bower.json
new file mode 100644
index 0000000000000000000000000000000000000000..651dce3f498884a0b660c52f058e3005070d0317
--- /dev/null
+++ b/file_drive-master/content/assets/basicContext-master/bower.json
@@ -0,0 +1,20 @@
+{
+  "name": "basicContext",
+  "authors": [
+    "Tobias Reich <tobias@electerious.com>"
+  ],
+  "description": "Easy-to-use context-menu for your website or webapp",
+  "main": "dist/basicContext.min.js",
+  "keywords": [
+    "context",
+    "menu",
+    "popup",
+    "right-click"
+  ],
+  "license": "MIT",
+  "homepage": "http://github.com/electerious/basicContext",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/electerious/basicContext.git"
+  }
+}
diff --git a/file_drive-master/content/assets/basicContext-master/demos/addons/fadeIn.html b/file_drive-master/content/assets/basicContext-master/demos/addons/fadeIn.html
new file mode 100644
index 0000000000000000000000000000000000000000..b8b8484cff2bd5229fbca80147ce317060a202df
--- /dev/null
+++ b/file_drive-master/content/assets/basicContext-master/demos/addons/fadeIn.html
@@ -0,0 +1,114 @@
+<!doctype html>
+<html lang="en">
+
+	<meta charset="utf-8">
+	<title>basicContext Demo</title>
+
+	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.min.css">
+	<link rel="stylesheet" href="http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
+	<link rel="stylesheet" href="../../dist/basicContext.min.css">
+	<link rel="stylesheet" href="../../dist/themes/default.min.css">
+	<link rel="stylesheet" href="../../dist/addons/fadein.min.css">
+
+	<style>
+
+		html {
+			width: 100%;
+			height: 100%;
+		}
+
+		body {
+			min-height: 100%;
+			font-size: 14px;
+		}
+
+		a {
+			display: inline-block;
+			position: absolute;
+			margin: 5px;
+			padding: 6px 10px;
+			background: #4393e6;
+			color: #fff;
+			text-decoration: none;
+			border-radius: 3px;
+			-moz-user-select: none;
+			-webkit-user-select: none;
+			-ms-user-select: none;
+			user-select: none;
+		}
+
+		a.topleft {
+			top: 0;
+			left: 0;
+		}
+
+		a.topright {
+			top: 0;
+			right: 0;
+		}
+
+		a.bottomleft {
+			bottom: 0;
+			left: 0;
+		}
+
+		a.bottomright {
+			bottom: 0;
+			right: 0;
+		}
+
+		a.center {
+			top: 50%;
+			left: 50%;
+			-webkit-transform: translate(-50%, -50%);
+			transform: translate(-50%, -50%);
+		}
+
+	</style>
+
+	<a href="#" class="topleft">Click me!</a>
+
+	<a href="#" class="topright">Click me!</a>
+
+	<a href="#" class="bottomleft">Click me!</a>
+
+	<a href="#" class="bottomright">Click me!</a>
+
+	<a href="#" class="center">Click me!</a>
+
+	<script src="../../dist/basicContext.min.js"></script>
+
+	<script>
+
+		var onClick = function(e) {
+
+			var clicked = function() { alert('Item clicked!') }
+
+			var items = [
+				{ title: 'Add Sites', icon: 'ion-plus-round', fn: clicked },
+				{ title: 'Reset Login', icon: 'ion-person', fn: clicked },
+				{ title: 'Help', icon: 'ion-help-buoy', fn: clicked },
+				{ title: 'Disabled', icon: 'ion-minus-circled', fn: clicked, disabled: true },
+				{ title: 'Invisible', icon: 'ion-eye-disabled', fn: clicked, visible: false },
+				{ },
+				{ title: 'Logout', icon: 'ion-log-out', fn: clicked }
+			]
+
+			basicContext.show(items, e)
+
+		}
+
+		document.addEventListener('DOMContentLoaded', function() {
+
+			document.querySelector('a.topleft').addEventListener('cli